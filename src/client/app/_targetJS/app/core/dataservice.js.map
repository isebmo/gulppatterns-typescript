{"version":3,"sources":["app/core/dataservice.ts"],"names":[],"mappings":"AAAA,IAAO,GAAG,CAoCT;AApCD,WAAO,GAAG;IAAC,IAAA,IAAI,CAoCd;IApCU,WAAA,IAAI,EAAC,CAAC;QACf,YAAY,CAAC;QAOb;YAEE,qBAAoB,KAAsB,EAChC,EAAgB,EAChB,SAAsC,EACtC,MAA4B;gBALxC,iBAuBC;gBArBqB,UAAK,GAAL,KAAK,CAAiB;gBAChC,OAAE,GAAF,EAAE,CAAc;gBAChB,cAAS,GAAT,SAAS,CAA6B;gBACtC,WAAM,GAAN,MAAM,CAAsB;gBAGtC,oBAAe,GAA8B,cAAM,OAAA,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAhB,CAAgB,CAAC;gBAEpE,cAAS,GAA2B;oBAClC,OAAA,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC;yBAC1B,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC;yBAClB,KAAK,CAAC,KAAI,CAAC,IAAI,CAAC;gBAFnB,CAEmB,CAAC;gBAEd,YAAO,GAA0B,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAb,CAAa,CAAC;gBAE7D,SAAI,GAAuB,UAAC,KAAK;oBACvC,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;oBACjC,IAAI,MAAM,GAAG,0BAA0B,CAAC;oBACxC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;oBACpC,MAAM,CAAC,KAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC7B,CAAC,CAAA;YAhBD,CAAC;YALM,mBAAO,GAAkB,CAAC,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;YAsBzE,kBAAC;QAAD,CAvBA,AAuBC,IAAA;QAvBY,gBAAW,cAuBvB,CAAA;QAED,OAAO;aACJ,MAAM,CAAC,UAAU,CAAC;aAClB,OAAO,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;IACzC,CAAC,EApCU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAoCd;AAAD,CAAC,EApCM,GAAG,KAAH,GAAG,QAoCT","file":"app/core/dataservice.js","sourcesContent":["module app.core {\n  'use strict';\n\n  export interface IDataService {\n    getMessageCount: () => ng.IPromise<number>;\n    getPeople: () => ng.IPromise<any>;\n  }\n\n  export class DataService implements IDataService {\n    static $inject: Array<string> = ['$http', '$q', 'exception', 'logger'];\n    constructor(private $http: ng.IHttpService,\n      private $q: ng.IQService,\n      private exception: blocks.exception.IException,\n      private logger: blocks.logger.Logger) {\n    }\n\n    getMessageCount: () => ng.IPromise<number> = () => this.$q.when(72);\n\n    getPeople: () => ng.IPromise<any> = () =>\n      this.$http.get('/api/people')\n        .then(this.success)\n        .catch(this.fail);\n\n    private success: (response: any) => {} = (response) => response.data;\n\n    private fail: (error: any) => {} = (error) => {\n      var msg = error.data.description;\n      var reason = 'query for people failed.';\n      this.exception.catcher(msg)(reason);\n      return this.$q.reject(msg);\n    }\n  }\n\n  angular\n    .module('app.core')\n    .service('dataservice', DataService);\n}\n"],"sourceRoot":"/source/"}